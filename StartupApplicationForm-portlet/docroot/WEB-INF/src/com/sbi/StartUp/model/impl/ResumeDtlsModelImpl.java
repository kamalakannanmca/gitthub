/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sbi.StartUp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sbi.StartUp.model.ResumeDtls;
import com.sbi.StartUp.model.ResumeDtlsModel;
import com.sbi.StartUp.model.ResumeDtlsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ResumeDtls service. Represents a row in the &quot;SbiStartUp_ResumeDtls&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sbi.StartUp.model.ResumeDtlsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ResumeDtlsImpl}.
 * </p>
 *
 * @author MAH97223
 * @see ResumeDtlsImpl
 * @see com.sbi.StartUp.model.ResumeDtls
 * @see com.sbi.StartUp.model.ResumeDtlsModel
 * @generated
 */
@JSON(strict = true)
public class ResumeDtlsModelImpl extends BaseModelImpl<ResumeDtls>
	implements ResumeDtlsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a resume dtls model instance should use the {@link com.sbi.StartUp.model.ResumeDtls} interface instead.
	 */
	public static final String TABLE_NAME = "SbiStartUp_ResumeDtls";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ResumeId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "RegNum", Types.VARCHAR },
			{ "Name", Types.VARCHAR },
			{ "Email", Types.VARCHAR },
			{ "Mnumber", Types.VARCHAR },
			{ "Dob", Types.TIMESTAMP },
			{ "address_line_1", Types.VARCHAR },
			{ "address_line_2", Types.VARCHAR },
			{ "address_landmark", Types.VARCHAR },
			{ "address_city", Types.VARCHAR },
			{ "address_pin", Types.VARCHAR },
			{ "address_state", Types.VARCHAR },
			{ "perm_address_line_1", Types.VARCHAR },
			{ "perm_address_line_2", Types.VARCHAR },
			{ "perm_address_landmark", Types.VARCHAR },
			{ "perm_address_city", Types.VARCHAR },
			{ "perm_address_pin", Types.VARCHAR },
			{ "perm_address_state", Types.VARCHAR },
			{ "Pan", Types.VARCHAR },
			{ "AadharNum", Types.VARCHAR },
			{ "CarrerAspect", Types.VARCHAR },
			{ "KeyITSkill", Types.VARCHAR },
			{ "CertfTra", Types.VARCHAR },
			{ "EmpyHistory", Types.VARCHAR },
			{ "CoreComp", Types.VARCHAR },
			{ "Accomplishment", Types.VARCHAR },
			{ "Academics", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "flag", Types.BOOLEAN },
			{ "indexno", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SbiStartUp_ResumeDtls (ResumeId LONG not null primary key,createDate DATE null,modifiedDate DATE null,RegNum VARCHAR(75) null,Name VARCHAR(75) null,Email VARCHAR(75) null,Mnumber VARCHAR(75) null,Dob DATE null,address_line_1 VARCHAR(75) null,address_line_2 VARCHAR(75) null,address_landmark VARCHAR(75) null,address_city VARCHAR(75) null,address_pin VARCHAR(75) null,address_state VARCHAR(75) null,perm_address_line_1 VARCHAR(75) null,perm_address_line_2 VARCHAR(75) null,perm_address_landmark VARCHAR(75) null,perm_address_city VARCHAR(75) null,perm_address_pin VARCHAR(75) null,perm_address_state VARCHAR(75) null,Pan VARCHAR(75) null,AadharNum VARCHAR(75) null,CarrerAspect VARCHAR(75) null,KeyITSkill VARCHAR(75) null,CertfTra VARCHAR(75) null,EmpyHistory VARCHAR(75) null,CoreComp VARCHAR(75) null,Accomplishment VARCHAR(75) null,Academics VARCHAR(75) null,status VARCHAR(75) null,flag BOOLEAN,indexno VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SbiStartUp_ResumeDtls";
	public static final String ORDER_BY_JPQL = " ORDER BY resumeDtls.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SbiStartUp_ResumeDtls.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sbi.StartUp.model.ResumeDtls"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sbi.StartUp.model.ResumeDtls"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sbi.StartUp.model.ResumeDtls"),
			true);
	public static long CREATEDATE_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ResumeDtls toModel(ResumeDtlsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ResumeDtls model = new ResumeDtlsImpl();

		model.setResumeId(soapModel.getResumeId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setRegNum(soapModel.getRegNum());
		model.setName(soapModel.getName());
		model.setEmail(soapModel.getEmail());
		model.setMnumber(soapModel.getMnumber());
		model.setDob(soapModel.getDob());
		model.setAddress_line_1(soapModel.getAddress_line_1());
		model.setAddress_line_2(soapModel.getAddress_line_2());
		model.setAddress_landmark(soapModel.getAddress_landmark());
		model.setAddress_city(soapModel.getAddress_city());
		model.setAddress_pin(soapModel.getAddress_pin());
		model.setAddress_state(soapModel.getAddress_state());
		model.setPerm_address_line_1(soapModel.getPerm_address_line_1());
		model.setPerm_address_line_2(soapModel.getPerm_address_line_2());
		model.setPerm_address_landmark(soapModel.getPerm_address_landmark());
		model.setPerm_address_city(soapModel.getPerm_address_city());
		model.setPerm_address_pin(soapModel.getPerm_address_pin());
		model.setPerm_address_state(soapModel.getPerm_address_state());
		model.setPan(soapModel.getPan());
		model.setAadharNum(soapModel.getAadharNum());
		model.setCarrerAspect(soapModel.getCarrerAspect());
		model.setKeyITSkill(soapModel.getKeyITSkill());
		model.setCertfTra(soapModel.getCertfTra());
		model.setEmpyHistory(soapModel.getEmpyHistory());
		model.setCoreComp(soapModel.getCoreComp());
		model.setAccomplishment(soapModel.getAccomplishment());
		model.setAcademics(soapModel.getAcademics());
		model.setStatus(soapModel.getStatus());
		model.setFlag(soapModel.getFlag());
		model.setIndexno(soapModel.getIndexno());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ResumeDtls> toModels(ResumeDtlsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ResumeDtls> models = new ArrayList<ResumeDtls>(soapModels.length);

		for (ResumeDtlsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sbi.StartUp.model.ResumeDtls"));

	public ResumeDtlsModelImpl() {
	}

	public long getPrimaryKey() {
		return _ResumeId;
	}

	public void setPrimaryKey(long primaryKey) {
		setResumeId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_ResumeId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ResumeDtls.class;
	}

	public String getModelClassName() {
		return ResumeDtls.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ResumeId", getResumeId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("RegNum", getRegNum());
		attributes.put("Name", getName());
		attributes.put("Email", getEmail());
		attributes.put("Mnumber", getMnumber());
		attributes.put("Dob", getDob());
		attributes.put("address_line_1", getAddress_line_1());
		attributes.put("address_line_2", getAddress_line_2());
		attributes.put("address_landmark", getAddress_landmark());
		attributes.put("address_city", getAddress_city());
		attributes.put("address_pin", getAddress_pin());
		attributes.put("address_state", getAddress_state());
		attributes.put("perm_address_line_1", getPerm_address_line_1());
		attributes.put("perm_address_line_2", getPerm_address_line_2());
		attributes.put("perm_address_landmark", getPerm_address_landmark());
		attributes.put("perm_address_city", getPerm_address_city());
		attributes.put("perm_address_pin", getPerm_address_pin());
		attributes.put("perm_address_state", getPerm_address_state());
		attributes.put("Pan", getPan());
		attributes.put("AadharNum", getAadharNum());
		attributes.put("CarrerAspect", getCarrerAspect());
		attributes.put("KeyITSkill", getKeyITSkill());
		attributes.put("CertfTra", getCertfTra());
		attributes.put("EmpyHistory", getEmpyHistory());
		attributes.put("CoreComp", getCoreComp());
		attributes.put("Accomplishment", getAccomplishment());
		attributes.put("Academics", getAcademics());
		attributes.put("status", getStatus());
		attributes.put("flag", getFlag());
		attributes.put("indexno", getIndexno());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long ResumeId = (Long)attributes.get("ResumeId");

		if (ResumeId != null) {
			setResumeId(ResumeId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String RegNum = (String)attributes.get("RegNum");

		if (RegNum != null) {
			setRegNum(RegNum);
		}

		String Name = (String)attributes.get("Name");

		if (Name != null) {
			setName(Name);
		}

		String Email = (String)attributes.get("Email");

		if (Email != null) {
			setEmail(Email);
		}

		String Mnumber = (String)attributes.get("Mnumber");

		if (Mnumber != null) {
			setMnumber(Mnumber);
		}

		Date Dob = (Date)attributes.get("Dob");

		if (Dob != null) {
			setDob(Dob);
		}

		String address_line_1 = (String)attributes.get("address_line_1");

		if (address_line_1 != null) {
			setAddress_line_1(address_line_1);
		}

		String address_line_2 = (String)attributes.get("address_line_2");

		if (address_line_2 != null) {
			setAddress_line_2(address_line_2);
		}

		String address_landmark = (String)attributes.get("address_landmark");

		if (address_landmark != null) {
			setAddress_landmark(address_landmark);
		}

		String address_city = (String)attributes.get("address_city");

		if (address_city != null) {
			setAddress_city(address_city);
		}

		String address_pin = (String)attributes.get("address_pin");

		if (address_pin != null) {
			setAddress_pin(address_pin);
		}

		String address_state = (String)attributes.get("address_state");

		if (address_state != null) {
			setAddress_state(address_state);
		}

		String perm_address_line_1 = (String)attributes.get(
				"perm_address_line_1");

		if (perm_address_line_1 != null) {
			setPerm_address_line_1(perm_address_line_1);
		}

		String perm_address_line_2 = (String)attributes.get(
				"perm_address_line_2");

		if (perm_address_line_2 != null) {
			setPerm_address_line_2(perm_address_line_2);
		}

		String perm_address_landmark = (String)attributes.get(
				"perm_address_landmark");

		if (perm_address_landmark != null) {
			setPerm_address_landmark(perm_address_landmark);
		}

		String perm_address_city = (String)attributes.get("perm_address_city");

		if (perm_address_city != null) {
			setPerm_address_city(perm_address_city);
		}

		String perm_address_pin = (String)attributes.get("perm_address_pin");

		if (perm_address_pin != null) {
			setPerm_address_pin(perm_address_pin);
		}

		String perm_address_state = (String)attributes.get("perm_address_state");

		if (perm_address_state != null) {
			setPerm_address_state(perm_address_state);
		}

		String Pan = (String)attributes.get("Pan");

		if (Pan != null) {
			setPan(Pan);
		}

		String AadharNum = (String)attributes.get("AadharNum");

		if (AadharNum != null) {
			setAadharNum(AadharNum);
		}

		String CarrerAspect = (String)attributes.get("CarrerAspect");

		if (CarrerAspect != null) {
			setCarrerAspect(CarrerAspect);
		}

		String KeyITSkill = (String)attributes.get("KeyITSkill");

		if (KeyITSkill != null) {
			setKeyITSkill(KeyITSkill);
		}

		String CertfTra = (String)attributes.get("CertfTra");

		if (CertfTra != null) {
			setCertfTra(CertfTra);
		}

		String EmpyHistory = (String)attributes.get("EmpyHistory");

		if (EmpyHistory != null) {
			setEmpyHistory(EmpyHistory);
		}

		String CoreComp = (String)attributes.get("CoreComp");

		if (CoreComp != null) {
			setCoreComp(CoreComp);
		}

		String Accomplishment = (String)attributes.get("Accomplishment");

		if (Accomplishment != null) {
			setAccomplishment(Accomplishment);
		}

		String Academics = (String)attributes.get("Academics");

		if (Academics != null) {
			setAcademics(Academics);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Boolean flag = (Boolean)attributes.get("flag");

		if (flag != null) {
			setFlag(flag);
		}

		String indexno = (String)attributes.get("indexno");

		if (indexno != null) {
			setIndexno(indexno);
		}
	}

	@JSON
	public long getResumeId() {
		return _ResumeId;
	}

	public void setResumeId(long ResumeId) {
		_ResumeId = ResumeId;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		if (_originalCreateDate == null) {
			_originalCreateDate = _createDate;
		}

		_createDate = createDate;
	}

	public Date getOriginalCreateDate() {
		return _originalCreateDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getRegNum() {
		if (_RegNum == null) {
			return StringPool.BLANK;
		}
		else {
			return _RegNum;
		}
	}

	public void setRegNum(String RegNum) {
		_RegNum = RegNum;
	}

	@JSON
	public String getName() {
		if (_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _Name;
		}
	}

	public void setName(String Name) {
		_Name = Name;
	}

	@JSON
	public String getEmail() {
		if (_Email == null) {
			return StringPool.BLANK;
		}
		else {
			return _Email;
		}
	}

	public void setEmail(String Email) {
		_Email = Email;
	}

	@JSON
	public String getMnumber() {
		if (_Mnumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _Mnumber;
		}
	}

	public void setMnumber(String Mnumber) {
		_Mnumber = Mnumber;
	}

	@JSON
	public Date getDob() {
		return _Dob;
	}

	public void setDob(Date Dob) {
		_Dob = Dob;
	}

	@JSON
	public String getAddress_line_1() {
		if (_address_line_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _address_line_1;
		}
	}

	public void setAddress_line_1(String address_line_1) {
		_address_line_1 = address_line_1;
	}

	@JSON
	public String getAddress_line_2() {
		if (_address_line_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _address_line_2;
		}
	}

	public void setAddress_line_2(String address_line_2) {
		_address_line_2 = address_line_2;
	}

	@JSON
	public String getAddress_landmark() {
		if (_address_landmark == null) {
			return StringPool.BLANK;
		}
		else {
			return _address_landmark;
		}
	}

	public void setAddress_landmark(String address_landmark) {
		_address_landmark = address_landmark;
	}

	@JSON
	public String getAddress_city() {
		if (_address_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _address_city;
		}
	}

	public void setAddress_city(String address_city) {
		_address_city = address_city;
	}

	@JSON
	public String getAddress_pin() {
		if (_address_pin == null) {
			return StringPool.BLANK;
		}
		else {
			return _address_pin;
		}
	}

	public void setAddress_pin(String address_pin) {
		_address_pin = address_pin;
	}

	@JSON
	public String getAddress_state() {
		if (_address_state == null) {
			return StringPool.BLANK;
		}
		else {
			return _address_state;
		}
	}

	public void setAddress_state(String address_state) {
		_address_state = address_state;
	}

	@JSON
	public String getPerm_address_line_1() {
		if (_perm_address_line_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _perm_address_line_1;
		}
	}

	public void setPerm_address_line_1(String perm_address_line_1) {
		_perm_address_line_1 = perm_address_line_1;
	}

	@JSON
	public String getPerm_address_line_2() {
		if (_perm_address_line_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _perm_address_line_2;
		}
	}

	public void setPerm_address_line_2(String perm_address_line_2) {
		_perm_address_line_2 = perm_address_line_2;
	}

	@JSON
	public String getPerm_address_landmark() {
		if (_perm_address_landmark == null) {
			return StringPool.BLANK;
		}
		else {
			return _perm_address_landmark;
		}
	}

	public void setPerm_address_landmark(String perm_address_landmark) {
		_perm_address_landmark = perm_address_landmark;
	}

	@JSON
	public String getPerm_address_city() {
		if (_perm_address_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _perm_address_city;
		}
	}

	public void setPerm_address_city(String perm_address_city) {
		_perm_address_city = perm_address_city;
	}

	@JSON
	public String getPerm_address_pin() {
		if (_perm_address_pin == null) {
			return StringPool.BLANK;
		}
		else {
			return _perm_address_pin;
		}
	}

	public void setPerm_address_pin(String perm_address_pin) {
		_perm_address_pin = perm_address_pin;
	}

	@JSON
	public String getPerm_address_state() {
		if (_perm_address_state == null) {
			return StringPool.BLANK;
		}
		else {
			return _perm_address_state;
		}
	}

	public void setPerm_address_state(String perm_address_state) {
		_perm_address_state = perm_address_state;
	}

	@JSON
	public String getPan() {
		if (_Pan == null) {
			return StringPool.BLANK;
		}
		else {
			return _Pan;
		}
	}

	public void setPan(String Pan) {
		_Pan = Pan;
	}

	@JSON
	public String getAadharNum() {
		if (_AadharNum == null) {
			return StringPool.BLANK;
		}
		else {
			return _AadharNum;
		}
	}

	public void setAadharNum(String AadharNum) {
		_AadharNum = AadharNum;
	}

	@JSON
	public String getCarrerAspect() {
		if (_CarrerAspect == null) {
			return StringPool.BLANK;
		}
		else {
			return _CarrerAspect;
		}
	}

	public void setCarrerAspect(String CarrerAspect) {
		_CarrerAspect = CarrerAspect;
	}

	@JSON
	public String getKeyITSkill() {
		if (_KeyITSkill == null) {
			return StringPool.BLANK;
		}
		else {
			return _KeyITSkill;
		}
	}

	public void setKeyITSkill(String KeyITSkill) {
		_KeyITSkill = KeyITSkill;
	}

	@JSON
	public String getCertfTra() {
		if (_CertfTra == null) {
			return StringPool.BLANK;
		}
		else {
			return _CertfTra;
		}
	}

	public void setCertfTra(String CertfTra) {
		_CertfTra = CertfTra;
	}

	@JSON
	public String getEmpyHistory() {
		if (_EmpyHistory == null) {
			return StringPool.BLANK;
		}
		else {
			return _EmpyHistory;
		}
	}

	public void setEmpyHistory(String EmpyHistory) {
		_EmpyHistory = EmpyHistory;
	}

	@JSON
	public String getCoreComp() {
		if (_CoreComp == null) {
			return StringPool.BLANK;
		}
		else {
			return _CoreComp;
		}
	}

	public void setCoreComp(String CoreComp) {
		_CoreComp = CoreComp;
	}

	@JSON
	public String getAccomplishment() {
		if (_Accomplishment == null) {
			return StringPool.BLANK;
		}
		else {
			return _Accomplishment;
		}
	}

	public void setAccomplishment(String Accomplishment) {
		_Accomplishment = Accomplishment;
	}

	@JSON
	public String getAcademics() {
		if (_Academics == null) {
			return StringPool.BLANK;
		}
		else {
			return _Academics;
		}
	}

	public void setAcademics(String Academics) {
		_Academics = Academics;
	}

	@JSON
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	public boolean getFlag() {
		return _flag;
	}

	public boolean isFlag() {
		return _flag;
	}

	public void setFlag(boolean flag) {
		_flag = flag;
	}

	@JSON
	public String getIndexno() {
		if (_indexno == null) {
			return StringPool.BLANK;
		}
		else {
			return _indexno;
		}
	}

	public void setIndexno(String indexno) {
		_indexno = indexno;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ResumeDtls.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ResumeDtls toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ResumeDtls)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public ResumeDtls toUnescapedModel() {
		return (ResumeDtls)this;
	}

	@Override
	public Object clone() {
		ResumeDtlsImpl resumeDtlsImpl = new ResumeDtlsImpl();

		resumeDtlsImpl.setResumeId(getResumeId());
		resumeDtlsImpl.setCreateDate(getCreateDate());
		resumeDtlsImpl.setModifiedDate(getModifiedDate());
		resumeDtlsImpl.setRegNum(getRegNum());
		resumeDtlsImpl.setName(getName());
		resumeDtlsImpl.setEmail(getEmail());
		resumeDtlsImpl.setMnumber(getMnumber());
		resumeDtlsImpl.setDob(getDob());
		resumeDtlsImpl.setAddress_line_1(getAddress_line_1());
		resumeDtlsImpl.setAddress_line_2(getAddress_line_2());
		resumeDtlsImpl.setAddress_landmark(getAddress_landmark());
		resumeDtlsImpl.setAddress_city(getAddress_city());
		resumeDtlsImpl.setAddress_pin(getAddress_pin());
		resumeDtlsImpl.setAddress_state(getAddress_state());
		resumeDtlsImpl.setPerm_address_line_1(getPerm_address_line_1());
		resumeDtlsImpl.setPerm_address_line_2(getPerm_address_line_2());
		resumeDtlsImpl.setPerm_address_landmark(getPerm_address_landmark());
		resumeDtlsImpl.setPerm_address_city(getPerm_address_city());
		resumeDtlsImpl.setPerm_address_pin(getPerm_address_pin());
		resumeDtlsImpl.setPerm_address_state(getPerm_address_state());
		resumeDtlsImpl.setPan(getPan());
		resumeDtlsImpl.setAadharNum(getAadharNum());
		resumeDtlsImpl.setCarrerAspect(getCarrerAspect());
		resumeDtlsImpl.setKeyITSkill(getKeyITSkill());
		resumeDtlsImpl.setCertfTra(getCertfTra());
		resumeDtlsImpl.setEmpyHistory(getEmpyHistory());
		resumeDtlsImpl.setCoreComp(getCoreComp());
		resumeDtlsImpl.setAccomplishment(getAccomplishment());
		resumeDtlsImpl.setAcademics(getAcademics());
		resumeDtlsImpl.setStatus(getStatus());
		resumeDtlsImpl.setFlag(getFlag());
		resumeDtlsImpl.setIndexno(getIndexno());

		resumeDtlsImpl.resetOriginalValues();

		return resumeDtlsImpl;
	}

	public int compareTo(ResumeDtls resumeDtls) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), resumeDtls.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ResumeDtls)) {
			return false;
		}

		ResumeDtls resumeDtls = (ResumeDtls)obj;

		long primaryKey = resumeDtls.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ResumeDtlsModelImpl resumeDtlsModelImpl = this;

		resumeDtlsModelImpl._originalCreateDate = resumeDtlsModelImpl._createDate;

		resumeDtlsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ResumeDtls> toCacheModel() {
		ResumeDtlsCacheModel resumeDtlsCacheModel = new ResumeDtlsCacheModel();

		resumeDtlsCacheModel.ResumeId = getResumeId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			resumeDtlsCacheModel.createDate = createDate.getTime();
		}
		else {
			resumeDtlsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			resumeDtlsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			resumeDtlsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		resumeDtlsCacheModel.RegNum = getRegNum();

		String RegNum = resumeDtlsCacheModel.RegNum;

		if ((RegNum != null) && (RegNum.length() == 0)) {
			resumeDtlsCacheModel.RegNum = null;
		}

		resumeDtlsCacheModel.Name = getName();

		String Name = resumeDtlsCacheModel.Name;

		if ((Name != null) && (Name.length() == 0)) {
			resumeDtlsCacheModel.Name = null;
		}

		resumeDtlsCacheModel.Email = getEmail();

		String Email = resumeDtlsCacheModel.Email;

		if ((Email != null) && (Email.length() == 0)) {
			resumeDtlsCacheModel.Email = null;
		}

		resumeDtlsCacheModel.Mnumber = getMnumber();

		String Mnumber = resumeDtlsCacheModel.Mnumber;

		if ((Mnumber != null) && (Mnumber.length() == 0)) {
			resumeDtlsCacheModel.Mnumber = null;
		}

		Date Dob = getDob();

		if (Dob != null) {
			resumeDtlsCacheModel.Dob = Dob.getTime();
		}
		else {
			resumeDtlsCacheModel.Dob = Long.MIN_VALUE;
		}

		resumeDtlsCacheModel.address_line_1 = getAddress_line_1();

		String address_line_1 = resumeDtlsCacheModel.address_line_1;

		if ((address_line_1 != null) && (address_line_1.length() == 0)) {
			resumeDtlsCacheModel.address_line_1 = null;
		}

		resumeDtlsCacheModel.address_line_2 = getAddress_line_2();

		String address_line_2 = resumeDtlsCacheModel.address_line_2;

		if ((address_line_2 != null) && (address_line_2.length() == 0)) {
			resumeDtlsCacheModel.address_line_2 = null;
		}

		resumeDtlsCacheModel.address_landmark = getAddress_landmark();

		String address_landmark = resumeDtlsCacheModel.address_landmark;

		if ((address_landmark != null) && (address_landmark.length() == 0)) {
			resumeDtlsCacheModel.address_landmark = null;
		}

		resumeDtlsCacheModel.address_city = getAddress_city();

		String address_city = resumeDtlsCacheModel.address_city;

		if ((address_city != null) && (address_city.length() == 0)) {
			resumeDtlsCacheModel.address_city = null;
		}

		resumeDtlsCacheModel.address_pin = getAddress_pin();

		String address_pin = resumeDtlsCacheModel.address_pin;

		if ((address_pin != null) && (address_pin.length() == 0)) {
			resumeDtlsCacheModel.address_pin = null;
		}

		resumeDtlsCacheModel.address_state = getAddress_state();

		String address_state = resumeDtlsCacheModel.address_state;

		if ((address_state != null) && (address_state.length() == 0)) {
			resumeDtlsCacheModel.address_state = null;
		}

		resumeDtlsCacheModel.perm_address_line_1 = getPerm_address_line_1();

		String perm_address_line_1 = resumeDtlsCacheModel.perm_address_line_1;

		if ((perm_address_line_1 != null) &&
				(perm_address_line_1.length() == 0)) {
			resumeDtlsCacheModel.perm_address_line_1 = null;
		}

		resumeDtlsCacheModel.perm_address_line_2 = getPerm_address_line_2();

		String perm_address_line_2 = resumeDtlsCacheModel.perm_address_line_2;

		if ((perm_address_line_2 != null) &&
				(perm_address_line_2.length() == 0)) {
			resumeDtlsCacheModel.perm_address_line_2 = null;
		}

		resumeDtlsCacheModel.perm_address_landmark = getPerm_address_landmark();

		String perm_address_landmark = resumeDtlsCacheModel.perm_address_landmark;

		if ((perm_address_landmark != null) &&
				(perm_address_landmark.length() == 0)) {
			resumeDtlsCacheModel.perm_address_landmark = null;
		}

		resumeDtlsCacheModel.perm_address_city = getPerm_address_city();

		String perm_address_city = resumeDtlsCacheModel.perm_address_city;

		if ((perm_address_city != null) && (perm_address_city.length() == 0)) {
			resumeDtlsCacheModel.perm_address_city = null;
		}

		resumeDtlsCacheModel.perm_address_pin = getPerm_address_pin();

		String perm_address_pin = resumeDtlsCacheModel.perm_address_pin;

		if ((perm_address_pin != null) && (perm_address_pin.length() == 0)) {
			resumeDtlsCacheModel.perm_address_pin = null;
		}

		resumeDtlsCacheModel.perm_address_state = getPerm_address_state();

		String perm_address_state = resumeDtlsCacheModel.perm_address_state;

		if ((perm_address_state != null) && (perm_address_state.length() == 0)) {
			resumeDtlsCacheModel.perm_address_state = null;
		}

		resumeDtlsCacheModel.Pan = getPan();

		String Pan = resumeDtlsCacheModel.Pan;

		if ((Pan != null) && (Pan.length() == 0)) {
			resumeDtlsCacheModel.Pan = null;
		}

		resumeDtlsCacheModel.AadharNum = getAadharNum();

		String AadharNum = resumeDtlsCacheModel.AadharNum;

		if ((AadharNum != null) && (AadharNum.length() == 0)) {
			resumeDtlsCacheModel.AadharNum = null;
		}

		resumeDtlsCacheModel.CarrerAspect = getCarrerAspect();

		String CarrerAspect = resumeDtlsCacheModel.CarrerAspect;

		if ((CarrerAspect != null) && (CarrerAspect.length() == 0)) {
			resumeDtlsCacheModel.CarrerAspect = null;
		}

		resumeDtlsCacheModel.KeyITSkill = getKeyITSkill();

		String KeyITSkill = resumeDtlsCacheModel.KeyITSkill;

		if ((KeyITSkill != null) && (KeyITSkill.length() == 0)) {
			resumeDtlsCacheModel.KeyITSkill = null;
		}

		resumeDtlsCacheModel.CertfTra = getCertfTra();

		String CertfTra = resumeDtlsCacheModel.CertfTra;

		if ((CertfTra != null) && (CertfTra.length() == 0)) {
			resumeDtlsCacheModel.CertfTra = null;
		}

		resumeDtlsCacheModel.EmpyHistory = getEmpyHistory();

		String EmpyHistory = resumeDtlsCacheModel.EmpyHistory;

		if ((EmpyHistory != null) && (EmpyHistory.length() == 0)) {
			resumeDtlsCacheModel.EmpyHistory = null;
		}

		resumeDtlsCacheModel.CoreComp = getCoreComp();

		String CoreComp = resumeDtlsCacheModel.CoreComp;

		if ((CoreComp != null) && (CoreComp.length() == 0)) {
			resumeDtlsCacheModel.CoreComp = null;
		}

		resumeDtlsCacheModel.Accomplishment = getAccomplishment();

		String Accomplishment = resumeDtlsCacheModel.Accomplishment;

		if ((Accomplishment != null) && (Accomplishment.length() == 0)) {
			resumeDtlsCacheModel.Accomplishment = null;
		}

		resumeDtlsCacheModel.Academics = getAcademics();

		String Academics = resumeDtlsCacheModel.Academics;

		if ((Academics != null) && (Academics.length() == 0)) {
			resumeDtlsCacheModel.Academics = null;
		}

		resumeDtlsCacheModel.status = getStatus();

		String status = resumeDtlsCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			resumeDtlsCacheModel.status = null;
		}

		resumeDtlsCacheModel.flag = getFlag();

		resumeDtlsCacheModel.indexno = getIndexno();

		String indexno = resumeDtlsCacheModel.indexno;

		if ((indexno != null) && (indexno.length() == 0)) {
			resumeDtlsCacheModel.indexno = null;
		}

		return resumeDtlsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(65);

		sb.append("{ResumeId=");
		sb.append(getResumeId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", RegNum=");
		sb.append(getRegNum());
		sb.append(", Name=");
		sb.append(getName());
		sb.append(", Email=");
		sb.append(getEmail());
		sb.append(", Mnumber=");
		sb.append(getMnumber());
		sb.append(", Dob=");
		sb.append(getDob());
		sb.append(", address_line_1=");
		sb.append(getAddress_line_1());
		sb.append(", address_line_2=");
		sb.append(getAddress_line_2());
		sb.append(", address_landmark=");
		sb.append(getAddress_landmark());
		sb.append(", address_city=");
		sb.append(getAddress_city());
		sb.append(", address_pin=");
		sb.append(getAddress_pin());
		sb.append(", address_state=");
		sb.append(getAddress_state());
		sb.append(", perm_address_line_1=");
		sb.append(getPerm_address_line_1());
		sb.append(", perm_address_line_2=");
		sb.append(getPerm_address_line_2());
		sb.append(", perm_address_landmark=");
		sb.append(getPerm_address_landmark());
		sb.append(", perm_address_city=");
		sb.append(getPerm_address_city());
		sb.append(", perm_address_pin=");
		sb.append(getPerm_address_pin());
		sb.append(", perm_address_state=");
		sb.append(getPerm_address_state());
		sb.append(", Pan=");
		sb.append(getPan());
		sb.append(", AadharNum=");
		sb.append(getAadharNum());
		sb.append(", CarrerAspect=");
		sb.append(getCarrerAspect());
		sb.append(", KeyITSkill=");
		sb.append(getKeyITSkill());
		sb.append(", CertfTra=");
		sb.append(getCertfTra());
		sb.append(", EmpyHistory=");
		sb.append(getEmpyHistory());
		sb.append(", CoreComp=");
		sb.append(getCoreComp());
		sb.append(", Accomplishment=");
		sb.append(getAccomplishment());
		sb.append(", Academics=");
		sb.append(getAcademics());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", flag=");
		sb.append(getFlag());
		sb.append(", indexno=");
		sb.append(getIndexno());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(100);

		sb.append("<model><model-name>");
		sb.append("com.sbi.StartUp.model.ResumeDtls");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ResumeId</column-name><column-value><![CDATA[");
		sb.append(getResumeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RegNum</column-name><column-value><![CDATA[");
		sb.append(getRegNum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Mnumber</column-name><column-value><![CDATA[");
		sb.append(getMnumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Dob</column-name><column-value><![CDATA[");
		sb.append(getDob());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address_line_1</column-name><column-value><![CDATA[");
		sb.append(getAddress_line_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address_line_2</column-name><column-value><![CDATA[");
		sb.append(getAddress_line_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address_landmark</column-name><column-value><![CDATA[");
		sb.append(getAddress_landmark());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address_city</column-name><column-value><![CDATA[");
		sb.append(getAddress_city());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address_pin</column-name><column-value><![CDATA[");
		sb.append(getAddress_pin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address_state</column-name><column-value><![CDATA[");
		sb.append(getAddress_state());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perm_address_line_1</column-name><column-value><![CDATA[");
		sb.append(getPerm_address_line_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perm_address_line_2</column-name><column-value><![CDATA[");
		sb.append(getPerm_address_line_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perm_address_landmark</column-name><column-value><![CDATA[");
		sb.append(getPerm_address_landmark());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perm_address_city</column-name><column-value><![CDATA[");
		sb.append(getPerm_address_city());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perm_address_pin</column-name><column-value><![CDATA[");
		sb.append(getPerm_address_pin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>perm_address_state</column-name><column-value><![CDATA[");
		sb.append(getPerm_address_state());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Pan</column-name><column-value><![CDATA[");
		sb.append(getPan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AadharNum</column-name><column-value><![CDATA[");
		sb.append(getAadharNum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CarrerAspect</column-name><column-value><![CDATA[");
		sb.append(getCarrerAspect());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>KeyITSkill</column-name><column-value><![CDATA[");
		sb.append(getKeyITSkill());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CertfTra</column-name><column-value><![CDATA[");
		sb.append(getCertfTra());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EmpyHistory</column-name><column-value><![CDATA[");
		sb.append(getEmpyHistory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CoreComp</column-name><column-value><![CDATA[");
		sb.append(getCoreComp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Accomplishment</column-name><column-value><![CDATA[");
		sb.append(getAccomplishment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Academics</column-name><column-value><![CDATA[");
		sb.append(getAcademics());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>flag</column-name><column-value><![CDATA[");
		sb.append(getFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indexno</column-name><column-value><![CDATA[");
		sb.append(getIndexno());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ResumeDtls.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ResumeDtls.class
		};
	private long _ResumeId;
	private Date _createDate;
	private Date _originalCreateDate;
	private Date _modifiedDate;
	private String _RegNum;
	private String _Name;
	private String _Email;
	private String _Mnumber;
	private Date _Dob;
	private String _address_line_1;
	private String _address_line_2;
	private String _address_landmark;
	private String _address_city;
	private String _address_pin;
	private String _address_state;
	private String _perm_address_line_1;
	private String _perm_address_line_2;
	private String _perm_address_landmark;
	private String _perm_address_city;
	private String _perm_address_pin;
	private String _perm_address_state;
	private String _Pan;
	private String _AadharNum;
	private String _CarrerAspect;
	private String _KeyITSkill;
	private String _CertfTra;
	private String _EmpyHistory;
	private String _CoreComp;
	private String _Accomplishment;
	private String _Academics;
	private String _status;
	private boolean _flag;
	private String _indexno;
	private long _columnBitmask;
	private ResumeDtls _escapedModel;
}