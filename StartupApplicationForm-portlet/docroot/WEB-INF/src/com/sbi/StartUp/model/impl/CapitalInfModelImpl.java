/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sbi.StartUp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sbi.StartUp.model.CapitalInf;
import com.sbi.StartUp.model.CapitalInfModel;
import com.sbi.StartUp.model.CapitalInfSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CapitalInf service. Represents a row in the &quot;SbiStartUp_CapitalInf&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sbi.StartUp.model.CapitalInfModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CapitalInfImpl}.
 * </p>
 *
 * @author MAH97223
 * @see CapitalInfImpl
 * @see com.sbi.StartUp.model.CapitalInf
 * @see com.sbi.StartUp.model.CapitalInfModel
 * @generated
 */
@JSON(strict = true)
public class CapitalInfModelImpl extends BaseModelImpl<CapitalInf>
	implements CapitalInfModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a capital inf model instance should use the {@link com.sbi.StartUp.model.CapitalInf} interface instead.
	 */
	public static final String TABLE_NAME = "SbiStartUp_CapitalInf";
	public static final Object[][] TABLE_COLUMNS = {
			{ "InfRefId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "RegNum", Types.VARCHAR },
			{ "cp_promoters_name", Types.VARCHAR },
			{ "cp_promoters_address", Types.VARCHAR },
			{ "cp_promoters_amount", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SbiStartUp_CapitalInf (InfRefId LONG not null primary key,createDate DATE null,modifiedDate DATE null,RegNum VARCHAR(75) null,cp_promoters_name VARCHAR(75) null,cp_promoters_address VARCHAR(75) null,cp_promoters_amount VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SbiStartUp_CapitalInf";
	public static final String ORDER_BY_JPQL = " ORDER BY capitalInf.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SbiStartUp_CapitalInf.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sbi.StartUp.model.CapitalInf"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sbi.StartUp.model.CapitalInf"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sbi.StartUp.model.CapitalInf"),
			true);
	public static long CREATEDATE_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CapitalInf toModel(CapitalInfSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CapitalInf model = new CapitalInfImpl();

		model.setInfRefId(soapModel.getInfRefId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setRegNum(soapModel.getRegNum());
		model.setCp_promoters_name(soapModel.getCp_promoters_name());
		model.setCp_promoters_address(soapModel.getCp_promoters_address());
		model.setCp_promoters_amount(soapModel.getCp_promoters_amount());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CapitalInf> toModels(CapitalInfSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CapitalInf> models = new ArrayList<CapitalInf>(soapModels.length);

		for (CapitalInfSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sbi.StartUp.model.CapitalInf"));

	public CapitalInfModelImpl() {
	}

	public long getPrimaryKey() {
		return _InfRefId;
	}

	public void setPrimaryKey(long primaryKey) {
		setInfRefId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_InfRefId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return CapitalInf.class;
	}

	public String getModelClassName() {
		return CapitalInf.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("InfRefId", getInfRefId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("RegNum", getRegNum());
		attributes.put("cp_promoters_name", getCp_promoters_name());
		attributes.put("cp_promoters_address", getCp_promoters_address());
		attributes.put("cp_promoters_amount", getCp_promoters_amount());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long InfRefId = (Long)attributes.get("InfRefId");

		if (InfRefId != null) {
			setInfRefId(InfRefId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String RegNum = (String)attributes.get("RegNum");

		if (RegNum != null) {
			setRegNum(RegNum);
		}

		String cp_promoters_name = (String)attributes.get("cp_promoters_name");

		if (cp_promoters_name != null) {
			setCp_promoters_name(cp_promoters_name);
		}

		String cp_promoters_address = (String)attributes.get(
				"cp_promoters_address");

		if (cp_promoters_address != null) {
			setCp_promoters_address(cp_promoters_address);
		}

		String cp_promoters_amount = (String)attributes.get(
				"cp_promoters_amount");

		if (cp_promoters_amount != null) {
			setCp_promoters_amount(cp_promoters_amount);
		}
	}

	@JSON
	public long getInfRefId() {
		return _InfRefId;
	}

	public void setInfRefId(long InfRefId) {
		_InfRefId = InfRefId;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		if (_originalCreateDate == null) {
			_originalCreateDate = _createDate;
		}

		_createDate = createDate;
	}

	public Date getOriginalCreateDate() {
		return _originalCreateDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getRegNum() {
		if (_RegNum == null) {
			return StringPool.BLANK;
		}
		else {
			return _RegNum;
		}
	}

	public void setRegNum(String RegNum) {
		_RegNum = RegNum;
	}

	@JSON
	public String getCp_promoters_name() {
		if (_cp_promoters_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _cp_promoters_name;
		}
	}

	public void setCp_promoters_name(String cp_promoters_name) {
		_cp_promoters_name = cp_promoters_name;
	}

	@JSON
	public String getCp_promoters_address() {
		if (_cp_promoters_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _cp_promoters_address;
		}
	}

	public void setCp_promoters_address(String cp_promoters_address) {
		_cp_promoters_address = cp_promoters_address;
	}

	@JSON
	public String getCp_promoters_amount() {
		if (_cp_promoters_amount == null) {
			return StringPool.BLANK;
		}
		else {
			return _cp_promoters_amount;
		}
	}

	public void setCp_promoters_amount(String cp_promoters_amount) {
		_cp_promoters_amount = cp_promoters_amount;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CapitalInf.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CapitalInf toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CapitalInf)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public CapitalInf toUnescapedModel() {
		return (CapitalInf)this;
	}

	@Override
	public Object clone() {
		CapitalInfImpl capitalInfImpl = new CapitalInfImpl();

		capitalInfImpl.setInfRefId(getInfRefId());
		capitalInfImpl.setCreateDate(getCreateDate());
		capitalInfImpl.setModifiedDate(getModifiedDate());
		capitalInfImpl.setRegNum(getRegNum());
		capitalInfImpl.setCp_promoters_name(getCp_promoters_name());
		capitalInfImpl.setCp_promoters_address(getCp_promoters_address());
		capitalInfImpl.setCp_promoters_amount(getCp_promoters_amount());

		capitalInfImpl.resetOriginalValues();

		return capitalInfImpl;
	}

	public int compareTo(CapitalInf capitalInf) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), capitalInf.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CapitalInf)) {
			return false;
		}

		CapitalInf capitalInf = (CapitalInf)obj;

		long primaryKey = capitalInf.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CapitalInfModelImpl capitalInfModelImpl = this;

		capitalInfModelImpl._originalCreateDate = capitalInfModelImpl._createDate;

		capitalInfModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CapitalInf> toCacheModel() {
		CapitalInfCacheModel capitalInfCacheModel = new CapitalInfCacheModel();

		capitalInfCacheModel.InfRefId = getInfRefId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			capitalInfCacheModel.createDate = createDate.getTime();
		}
		else {
			capitalInfCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			capitalInfCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			capitalInfCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		capitalInfCacheModel.RegNum = getRegNum();

		String RegNum = capitalInfCacheModel.RegNum;

		if ((RegNum != null) && (RegNum.length() == 0)) {
			capitalInfCacheModel.RegNum = null;
		}

		capitalInfCacheModel.cp_promoters_name = getCp_promoters_name();

		String cp_promoters_name = capitalInfCacheModel.cp_promoters_name;

		if ((cp_promoters_name != null) && (cp_promoters_name.length() == 0)) {
			capitalInfCacheModel.cp_promoters_name = null;
		}

		capitalInfCacheModel.cp_promoters_address = getCp_promoters_address();

		String cp_promoters_address = capitalInfCacheModel.cp_promoters_address;

		if ((cp_promoters_address != null) &&
				(cp_promoters_address.length() == 0)) {
			capitalInfCacheModel.cp_promoters_address = null;
		}

		capitalInfCacheModel.cp_promoters_amount = getCp_promoters_amount();

		String cp_promoters_amount = capitalInfCacheModel.cp_promoters_amount;

		if ((cp_promoters_amount != null) &&
				(cp_promoters_amount.length() == 0)) {
			capitalInfCacheModel.cp_promoters_amount = null;
		}

		return capitalInfCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{InfRefId=");
		sb.append(getInfRefId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", RegNum=");
		sb.append(getRegNum());
		sb.append(", cp_promoters_name=");
		sb.append(getCp_promoters_name());
		sb.append(", cp_promoters_address=");
		sb.append(getCp_promoters_address());
		sb.append(", cp_promoters_amount=");
		sb.append(getCp_promoters_amount());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.sbi.StartUp.model.CapitalInf");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>InfRefId</column-name><column-value><![CDATA[");
		sb.append(getInfRefId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RegNum</column-name><column-value><![CDATA[");
		sb.append(getRegNum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cp_promoters_name</column-name><column-value><![CDATA[");
		sb.append(getCp_promoters_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cp_promoters_address</column-name><column-value><![CDATA[");
		sb.append(getCp_promoters_address());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cp_promoters_amount</column-name><column-value><![CDATA[");
		sb.append(getCp_promoters_amount());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CapitalInf.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CapitalInf.class
		};
	private long _InfRefId;
	private Date _createDate;
	private Date _originalCreateDate;
	private Date _modifiedDate;
	private String _RegNum;
	private String _cp_promoters_name;
	private String _cp_promoters_address;
	private String _cp_promoters_amount;
	private long _columnBitmask;
	private CapitalInf _escapedModel;
}